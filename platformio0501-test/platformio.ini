; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600

[env:esp32dev]
src_filter = +<main/>

[env:code1]
src_filter = +<code1/>

[env:code2]
src_filter = +<code2/>

[env:ota-test]
; first upload code by COM port, then by upload_port = [hostname].local
; see ota-test by ota
src_filter = +<ota-test/>

[env:ota-test by ota]
src_filter = +<ota-test/>
upload_port = esp32-ota-js.local

[env:wifi-telnet-test]
; use MDNS.begin(...) to have [hostname].local
src_filter = +<wifi-telnet-test/>
monitor_port = socket://esp32-telnet-js.local:23
monitor_flags = --echo
monitor_filters = send_on_enter

[env:wifi-reconnect-test]
src_filter = +<wifi-reconnect-test/>
build_flags = -DCORE_DEBUG_LEVEL=5
monitor_filters =
    time
    printable
    esp32_exception_decoder

[env:wifi-event-test]
src_filter = +<wifi-event-test/>
build_flags = -DCORE_DEBUG_LEVEL=5
monitor_filters =
    time
    printable

[env:wifi-server-reconn-test]
src_filter = +<wifi-server-reconn-test/>
build_flags = -DCORE_DEBUG_LEVEL=5
monitor_filters =
    time
    printable
    esp32_exception_decoder

[env:wifi-asynctcp-test]
src_filter = +<wifi-asynctcp-test/>
build_flags = -DCORE_DEBUG_LEVEL=5
    -DCONFIG_ASYNC_TCP_RUNNING_CORE=0
monitor_filters =
    time
    printable
    esp32_exception_decoder
lib_deps = me-no-dev/AsyncTCP@^1.1.1

[env:heap-info-test]
src_filter = +<heap-info-test/>
monitor_filters =
    time
    printable
    esp32_exception_decoder
lib_deps = me-no-dev/AsyncTCP@^1.1.1
